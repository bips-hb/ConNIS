% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subsampleResults.R
\name{subsampleResults}
\alias{subsampleResults}
\title{Results based on subsamples}
\usage{
subsampleResults(
  method = "ConNIS",
  ins.positions,
  gene.names,
  gene.starts,
  gene.stops,
  num.ins.per.gene = NULL,
  genome.length,
  weightings = 1,
  m = 100,
  d = 0.5,
  use.parallelization = FALSE,
  parallelization.type = "mclapply",
  numCores = 3,
  cluster.type = NULL,
  seed = NULL,
  set.rng = NULL,
  keep.new.RNG = FALSE
)
}
\arguments{
\item{method}{Method that will be applied to subsamples. Available are
\code{"Binomial"}, \code{"ConNIS"}, \code{"Geometric"} and \code{"Tn5Gaps"}.}

\item{ins.positions}{Numeric vector of position of observed insertions sites.}

\item{gene.names}{The names of the genes.}

\item{gene.starts}{Starting position within the genome of each gene.}

\item{gene.stops}{Ending position within the genome of each gene.}

\item{num.ins.per.gene}{Number of unique insertion sites within each gene.}

\item{genome.length}{Length of the genome.}

\item{weightings}{A sequence of weight values that are applied to the
selected method.}

\item{m}{Number of sub samples.}

\item{d}{Proportion of the original IS used as sub samples.}

\item{use.parallelization}{Should the calcutltions be done in parallel?}

\item{parallelization.type}{Which method should be used for the
parallelization? Available are \code{"mclapply"} and \code{"parLapply"} of the
\code{"parallel"} package.}

\item{numCores}{Number of cores to juse for parallel calculation. Should not
exit the number of available (logical) cores of the system.}

\item{cluster.type}{If \code{"parLapply"} is used as parallelization.type, a
cluster type like \code{"PSOCK"} needs tp be specified. Check which types are
supported on your system. See als \code{?makeCluster} of the \code{parallel} package.}

\item{seed}{Seed for subsampling. If \code{NULL} no seed is set and results might
not be reproducable.}

\item{set.rng}{Which random number generator (RNG) should be used. If NULL, the
default RNG of the system is used. NOTE: if use.parallelizationization is \code{TRUE} the
\code{"L'Ecuyer-CMRG"} value for RNG should be used. For details see the manual of
the \code{parallel} package.}

\item{keep.new.RNG}{If the RNG is changed, should it kept for the rest of the
session? Default is \code{FALSE} (recommended).}
}
\value{
A list of \code{tibble}s. Each \code{tibble} is based on one subsample and
contains the results of each genes of each tuning/weight value.
}
\description{
'subsampleResults' draws \eqn{m} subsamples of the observerd IS and
calculates for each subsample the results for a user selected analysis
method.
}
\examples{
# generate random insertion sites
set.seed(1)
random_is <- sort(sample(1:10000, 2000))

# generate dummy gene names
genes <- paste("gene_", 1:30)

# generate radom start points and stop points of the dummy genes
set.seed(2)
x <- sort(sample(1:10000, 60))
starts <- x[seq(1,60, 2)]
stops <- x[seq(2,60, 2)]

genome_length <- 10000

# run subsumple procedure with ConNIS (sequential)
subsampleResults(method="ConNIS",
                  ins.positions = random_is,
                  gene.names = genes,
                  gene.starts = starts,
                  gene.stops = stops,
                  genome.length = genome_length,
                  weightings = c(0.3, 0.6),
                  m = 2,
                  d = 0.5,
                  use.parallelization = FALSE,
                  seed = 1)

# Example with parallelization (mclapply)
\dontrun{
subsampleResults(method="ConNIS",
                  ins.positions = random_is,
                  gene.names = genes,
                  gene.starts = starts,
                  gene.stops = stops,
                  genome.length = genome_length,
                  weightings = c(0.3, 0.6),
                  m = 2,
                  d = 0.5,
                  use.parallelization = T,
                  parallelization.type="mclapply",
                  numCores=detectCores(),
                  seed = 1)
}

}
